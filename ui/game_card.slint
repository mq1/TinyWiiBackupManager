// SPDX-FileCopyrightText: 2025 Manuel Quarneti <mq1@ik.me>
// SPDX-License-Identifier: GPL-3.0-only

import { Vertical, Horizontal, IconButton, ElevatedCard, MaterialText, MaterialPalette, VerticalDivider, Icon } from "@material";
import { Game, Console, ArchiveFormat } from "common.slint";

component ConsoleLabel inherits HorizontalLayout {
    in property <Console> console;
    alignment: start;

    if console == Console.Wii: Image {
        vertical-alignment: center;
        colorize: MaterialPalette.on_surface;
        source: @image-url("../mdi/tennis.svg");
        height: 18px;
        width: 18px;
    }

    if console == Console.Wii: MaterialText {
        vertical-alignment: center;
        text: " Wii";
    }

    if console == Console.GameCube: Image {
        vertical-alignment: center;
        colorize: MaterialPalette.on_surface;
        source: @image-url("../mdi/cube-outline.svg");
        height: 18px;
        width: 18px;
    }

    if console == Console.GameCube: MaterialText {
        vertical-alignment: center;
        text: " GC";
    }

    if console == Console.Unknown: MaterialText {
        vertical-alignment: center;
        text: "???";
    }
}

export component GameCard inherits VerticalLayout {
    in property <Game> game;
    in property <bool> is_li;
    padding: 4px;

    ElevatedCard {
        if !is_li: Vertical {
            Horizontal {
                alignment: space-between;

                ConsoleLabel {
                    console: game.console;
                }

                MaterialText {
                    text: game.size;
                }
            }

            Image {
                source: game.image;
            }

            MaterialText {
                horizontal-alignment: center;
                text: game.display-title;
            }

            Rectangle {
                height: 30px;
            }
        }

        if is_li: Horizontal {
            alignment: start;
            spacing: 16px;
            padding-left: 12px;
            padding-right: 12px;

            MaterialText {
                vertical-alignment: center;
                text: game.display-title;
            }

            VerticalDivider { }

            ConsoleLabel {
                console: game.console;
            }

            VerticalDivider { }

            Icon {
                source: @image-url("../mdi/scale.svg");
            }

            MaterialText {
                vertical-alignment: center;
                text: game.size;
            }
        }
    }
}

export component GameCardButtons inherits Horizontal {
    height: 34px;
    in property <ArchiveFormat> archive_format;

    callback open_game_info();
    callback open_game_dir();
    callback remove_game();
    callback archive_game();
    callback verify_game();

    IconButton {
        icon: @image-url("../mdi/information.svg");
        tooltip: "Game Information";
        inline: true;
        clicked => {
            open_game_info();
        }
    }

    IconButton {
        icon: @image-url("../mdi/folder-open.svg");
        tooltip: "Open Game Directory";
        inline: true;
        clicked => {
            open_game_dir();
        }
    }

    IconButton {
        icon: @image-url("../mdi/check-all.svg");
        tooltip: "Verify Hashes";
        inline: true;
        clicked => {
            verify_game();
        }
    }

    IconButton {
        icon: @image-url("../mdi/package-down.svg");
        tooltip: "Archive Game to " + (archive_format == ArchiveFormat.Rvz ? "RVZ" : "ISO");
        inline: true;
        clicked => {
            archive_game();
        }
    }

    IconButton {
        icon: @image-url("../mdi/trash-can.svg");
        tooltip: "Delete Game";
        inline: true;
        clicked => {
            remove_game();
        }
    }
}
