// SPDX-FileCopyrightText: 2025 Manuel Quarneti <mq1@ik.me>
// SPDX-License-Identifier: GPL-3.0-only

import { NavigationRail, MaterialPalette, Vertical, TonalIconButton, IconButton, ToolTip } from "@material";
import { UpdateInfo } from "common.slint";

export component SideBar inherits VerticalLayout {
    in-out property <int> current_index: 0;
    in property <bool> is_macos: false;
    in property <int> game_count: 0;
    in property <int> app_count: 0;
    in property <UpdateInfo> update_info;

    callback set_window_title(string);
    callback choose_mount_point();
    callback open_url(string);
    callback update_oscwii_apps();
    callback dot_clean();
    callback download_wiitdb();
    callback download_all_covers();

    padding-top: -44px + 12px; // 44px is NavigationRail top padding

    NavigationRail {
        width: 80px;
        alignment: start;
        current-index <=> current_index;

        items: [
            { icon: @image-url("../mdi/controller.svg"), text: "Games" },
            { icon: @image-url("../mdi/star.svg"), text: "Apps" },
            { icon: @image-url("../mdi/storefront.svg"), text: "OSCWii" },
            { icon: @image-url("../mdi/cog.svg"), text: "Settings" }
        ];

        index-changed(i) => {
            if i == 0 {
                set_window_title(" • " + game_count + " Games");
            }
            if i == 1 {
                set_window_title(" • " + app_count + " Apps");
            }
            if i == 2 {
                set_window_title(" • OSCWii");
                update_oscwii_apps();
            }
            if i == 3 {
                set_window_title(" • Settings");
            }
        }
    }

    Rectangle {
        width: 80px;
        background: MaterialPalette.surface;

        HorizontalLayout {
            alignment: center;

            Vertical {
                if !update_info.version.is-empty: TonalIconButton {
                    width: self.height;
                    z: 2.0;
                    icon: @image-url("../mdi/bell-plus.svg");
                    tooltip: "Update\navailable!\nv" + update_info.version;
                    clicked => {
                        open_url(update_info.url);
                    }
                }

                TonalIconButton {
                    width: self.height;
                    z: 1.9;
                    icon: @image-url("../mdi/harddisk.svg");
                    tooltip: "Choose\nDrive/Directory";
                    clicked => {
                        choose_mount_point();
                    }
                }

                TonalIconButton {
                    z: 1.8;
                    width: self.height;
                    icon: @image-url("../mdi/file-download.svg");
                    tooltip: "Download\nwiitdb.xml";
                    clicked => {
                        download_wiitdb();
                    }
                }

                TonalIconButton {
                    z: 1.7;
                    width: self.height;
                    icon: @image-url("../mdi/image-multiple.svg");
                    tooltip: "Download\nall Covers";
                    clicked => {
                        download_all_covers();
                    }
                }

                if is_macos: TonalIconButton {
                    z: 1.6;
                    width: self.height;
                    icon: @image-url("../mdi/ghost.svg");
                    tooltip: "Run dot_clean";
                    clicked => {
                        dot_clean();
                    }
                }

                IconButton {
                    z: 1.5;
                    width: self.height;
                    icon: @image-url("../mdi/information.svg");
                    clicked => {
                        open_url("https://github.com/mq1/TinyWiiBackupManager/wiki");
                    }
                }
            }
        }
    }
}
