// SPDX-FileCopyrightText: 2025 Manuel Quarneti <mq1@ik.me>
// SPDX-License-Identifier: GPL-3.0-only

import { IconButton, Vertical, MaterialText, ElevatedCard, MaterialPalette, Horizontal, CircularProgressIndicator, SnackBar } from "@material";
import { SideBar } from "sidebar.slint";
import { GameGrid } from "game_grid.slint";
import { Game, HbcApp, WiiOutputFormat, ArchiveFormat, TaskType, UpdateInfo } from "common.slint";
import { HbcAppGrid } from "hbc_app_grid.slint";
import { SettingsPage } from "settings.slint";
import { Status } from "status.slint";
import { HbcAppInfo } from "hbc_app_card.slint";

export * from "common.slint";

export component MainWindow inherits Window {
    in property <string> app_name: "";
    in-out property <string> dir_name: "";
    in property <string> disk_usage: "";
    in property <bool> is_macos: false;
    in-out property <int> current_index: 0;
    in property <[Game]> games;
    in property <[HbcApp]> hbc_apps;
    in property <string> status: "";
    in property <TaskType> task_type: TaskType.Unknown;
    in-out property <int> task_count: 0;
    in property <UpdateInfo> update_info;
    out property <HbcApp> current_app;

    callback choose_mount_point();
    callback open_url(string);
    callback remove_dir(string);
    callback add_games();
    callback wii_output_format_changed(WiiOutputFormat);
    callback archive_format_changed(ArchiveFormat);
    callback remove_update_partition_changed(bool);
    callback open_data_dir();

    public function show_update() {
        sb.show();
    }

    preferred-width: 800px;
    preferred-height: 600px;
    title: app_name + " • " + games.length + " Games" + (dir_name.is_empty ? "" : " • " + dir_name + " (" + disk_usage + ")");

    HorizontalLayout {
        SideBar {
            current_index <=> current_index;
            is_macos: is_macos;
            game_count: games.length;
            choose_mount_point => {
                choose_mount_point();
            }
            set-window-title(title) => {
                root.title = app_name + title + (dir_name.is_empty ? "" : " • " + dir_name + " (" + disk_usage + ")");
            }
            add_games => {
                add_games();
            }
        }

        VerticalLayout {
            if current_index == 0 && !dir_name.is-empty: GameGrid {
                games: games;
                open_url(url) => {
                    open_url(url);
                }
                remove_dir(path) => {
                    remove_dir(path);
                }
            }

            if current_index == 1 && !dir_name.is-empty: HbcAppGrid {
                apps: hbc_apps;
                open_app_info(app) => {
                    current_app = app;
                    app_info.show();
                }
                open_url(url) => {
                    open_url(url);
                }
                remove_dir(path) => {
                    remove_dir(path);
                }
            }

            if current_index == 3: SettingsPage {
                open_data_dir => open_data_dir();
            }

            if dir_name.is-empty && status.is-empty: Vertical {
                alignment: end;
                padding-bottom: 16px;

                MaterialText {
                    text: "⬅  Choose a drive or directory";
                    font-size: 18px;
                }
            }

            if task_count > 0: Status {
                status: status;
                task_type: task_type;
                task_count: task_count;
            }
        }
    }

    app_info := HbcAppInfo {
        width: root.width;
        height: root.height;
        app: current_app;
    }

    sb := SnackBar {
        height: root.height;
        width: root.width;
        text: "Update available!";
        action_text: "⬇ Download v" + update_info.version;
        has_close_button: false;
        close-policy: PopupClosePolicy.close-on-click;
        action_clicked() => {
            open_url(update_info.url);
        }
    }
}
