// SPDX-FileCopyrightText: 2025 Manuel Quarneti <mq1@ik.me>
// SPDX-License-Identifier: GPL-3.0-only

export enum Console {
    Wii,
    GameCube,
    Unknown,
}

export enum WiiOutputFormat {
    Wbfs,
    Iso,
}

export enum ArchiveFormat {
    Rvz,
    Iso,
}

export enum ViewAs {
    Grid,
    List,
}

export enum SortBy {
    NameAscending,
    NameDescending,
    SizeAscending,
    SizeDescending,
}

export struct Config {
    mount_point: string,
    remove_sources_games: bool,
    remove_sources_apps: bool,
    scrub_update_partition: bool,
    wii_output_format: WiiOutputFormat,
    archive_format: ArchiveFormat,
    always_split: bool,
    wii_ip: string,
    view_as: ViewAs,
    sort_by: SortBy,
}

export struct Game {
    id: string,
    display_title: string,
    path: string,
    image: image,
    size: string,
    size_mib: int,
    console: Console,
    search_str: string,
}

export struct HbcApp {
    slug: string,
    name: string,
    coder: string,
    version: string,
    release_date: string,
    short_description: string,
    long_description: string,
    path: string,
    image: image,
    size: string,
    size_mib: int,
    search_str: string,
}

export enum TaskType {
    Converting,
    Archiving,
    CheckingForUpdates,
    DownloadingCovers,
    InstallingApps,
    DownloadingFolder,
    DownloadingFile,
    VerifyingGame,
    Wiiload,
    Unknown,
}

export struct UpdateInfo {
    version: string,
    url: string,
}

export struct OscApp {
    slug: string,
    name: string,
    author: string,
    version: string,
    release_date: string,
    size: string,
    zip_url: string,
    icon: image,
    search_str: string,
}

export struct PartitionInfo {
    index: int,
    kind: string,
    size: string,
}

export struct DiscInfo {
    // Directory data
    game_dir: string,

    // Header data
    game_id: string,
    game_title: string,
    is_gamecube: bool,
    is_wii: bool,
    disc_num: int,
    disc_version: int,
    region: string,

    // Metadata
    format: string,
    compression: string,
    block_size: string,
    decrypted: bool,
    needs_hash_recovery: bool,
    lossless: bool,
    disc_size: string,
    crc32: string,
    md5: string,
    sha1: string,
    xxh64: string,
}
