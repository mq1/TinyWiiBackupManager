// SPDX-FileCopyrightText: 2025 Manuel Quarneti <mq1@ik.me>
// SPDX-License-Identifier: GPL-3.0-only

import { Vertical, RadioButton, Horizontal, HorizontalDivider, MaterialText, ElevatedButton, Icon } from "@material";
import { WiiOutputFormat, ArchiveFormat } from "common.slint";
import { FilledIconButton } from "../material-1.0/ui/components/filled_icon_button.slint";

export component SettingsPage inherits Vertical {
    padding: 16px;
    spacing: 4px;

    in-out property <WiiOutputFormat> wii_output_format;
    in-out property <ArchiveFormat> archive_format;
    in-out property <bool> remove_update_partition;

    callback wii_output_format_changed(WiiOutputFormat);
    callback archive_format_changed(ArchiveFormat);
    callback remove_update_partition_changed(bool);
    callback open_data_dir();

    Horizontal {
        alignment: start;
        padding-left: 6px;

        Icon {
            source: @image-url("../mdi/package-up.svg");
        }

        MaterialText {
            text: "Wii Output Format";
            font-size: 18px;
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: wii_output_format == WiiOutputFormat.WbfsAuto;
            clicked => {
                wii_output_format = WiiOutputFormat.WbfsAuto;
                wii_output_format_changed(WiiOutputFormat.WbfsAuto);
            }
        }

        MaterialText {
            text: "WBFS Auto Split (recommended)";
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: wii_output_format == WiiOutputFormat.WbfsFixed;
            clicked => {
                wii_output_format = WiiOutputFormat.WbfsFixed;
                wii_output_format_changed(WiiOutputFormat.WbfsFixed);
            }
        }

        MaterialText {
            text: "WBFS Fixed 4GB-32KB Split Size";
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: wii_output_format == WiiOutputFormat.Iso;
            clicked => {
                wii_output_format = WiiOutputFormat.Iso;
                wii_output_format_changed(WiiOutputFormat.Iso);
            }
        }

        MaterialText {
            text: "Iso (very large)";
        }
    }

    HorizontalDivider { }

    Horizontal {
        alignment: start;
        padding-left: 6px;

        Icon {
            source: @image-url("../mdi/trash-can.svg");
        }

        MaterialText {
            text: "Remove Update Partition on WBFS (experimental)";
            font-size: 18px;
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: !remove_update_partition;
            clicked => {
                remove_update_partition = false;
                remove_update_partition_changed(false);
            }
        }

        MaterialText {
            text: "No (recommended)";
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: remove_update_partition;
            clicked => {
                remove_update_partition = true;
                remove_update_partition_changed(true);
            }
        }

        MaterialText {
            text: "Yes (integrity check won't work)";
        }
    }

    HorizontalDivider { }

    Horizontal {
        alignment: start;
        padding-left: 6px;

        Icon {
            source: @image-url("../mdi/package-down.svg");
        }

        MaterialText {
            text: "Archive Format";
            font-size: 18px;
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: archive_format == ArchiveFormat.Rvz;
            clicked => {
                archive_format = ArchiveFormat.Rvz;
                archive_format_changed(ArchiveFormat.Rvz);
            }
        }

        MaterialText {
            text: "RVZ zstd-19 (recommended)";
        }
    }

    Horizontal {
        alignment: start;
        spacing: 16px;

        RadioButton {
            height: 14px;
            width: 14px;
            checked: archive_format == ArchiveFormat.Iso;
            clicked => {
                archive_format = ArchiveFormat.Iso;
                archive_format_changed(ArchiveFormat.Iso);
            }
        }

        MaterialText {
            text: "ISO (very large)";
        }
    }

    Rectangle {
        vertical-stretch: 1;
    }

    Horizontal {
        alignment: end;

        ElevatedButton {
            text: "Open Data Directory";
            icon: @image-url("../mdi/folder-open.svg");
            clicked => open_data_dir();
        }
    }
}
